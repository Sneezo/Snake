function update() {
	updatePositions();
	eatFruit();
	if(bullet !=  null) {
		bulletBorderCheck();
	}
	if(bullet != null) {
		bullet.move();	
	}
	redraw();
	hasMoved = false;
}

function redraw() {
	ctx.clearRect(0,0,620,620);
	fruit.draw();
	head.draw();
	if (bullet != null) {
		bullet.draw();	
	}
}

function bulletBorderCheck() {
	if (bullet.x < 0 || bullet.x > canvasWidth - squaresize) {
		bullet = null;
	} else if (bullet.y < 0 || bullet.y > canvasHeight - squaresize) {
		bullet = null;
	}
}

command[32] = function () {
	console.log("pressed space");
	head.shoot();
}


function togglePlay() {
	console.log("toggling");
	if(isPlaying){
		stopPlaying();
	} else {
		startPlaying();
	}
}

document.addEventListener('keydown',function(event) {
	console.log('YOU PRESSED: ' + event.keyCode);
	var f = command[event.keyCode];
	if (typeof(f) == 'function') {
		f();
	}
})


var bullet = new Array();

head.shoot = function () {
	console.log("shooting");
	var i = 0;
	while (bullet[i] != null) {
		i++
	};
	bullet[i] = new Bullet();
}

function Bullet() {
	this.x = head.x;
	this.y = head.y;
	this.dir = head.dir;
	this.width = squaresize/2;
	this.height = squaresize/2;

	this.draw = function () {
		console.log("drawing bullet");
		ctx.fillStyle = "#000000";
		ctx.fillRect(this.x, this.y, this.width, this.height);
	}
	this.move = function () {
		if(bullet.dir=="right") {
			bullet.x = bullet.x + 2*squaresize;
		} else if (bullet.dir=="left") {
			bullet.x = bullet.x - 2*squaresize;
		} else if (bullet.dir=="up") {
			bullet.y = bullet.y - 2*squaresize;
		} else if (bullet.dir=="down") {
			bullet.y = bullet.y + 2*squaresize;
		}
	}
}